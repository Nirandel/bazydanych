--1.2
 SELECT imie FROM pracownik; 
 
 --1.3
 SELECT imie,nazwisko,dzial FROM pracownik; 
 
 --2.2
 SELECT imie, nazwisko FROM pracownik ORDER BY nazwisko, imie;
 
 --2.3
 SELECT nazwisko, dzial, stanowisko FROM pracownik ORDER BY dzial, stanowisko DESC;
 
 --3.2 (select distint = selekcja bez powtorzen)
 SELECT DISTINCT dzial, stanowisko FROM pracownik;
 
 --3.3
 SELECT DISTINCT dzial, stanowisko FROM pracownik ORDER BY dzial DESC, stanowisko DESC;
 
 --4.2
 SELECT imie, nazwisko FROM pracownik WHERE stanowisko='sprzedawca';
 
 --4.3
 SELECT imie, nazwisko, pensja FROM pracownik WHERE pensja > 1500;
 
 --5.2
 SELECT imie, nazwisko, dzial, stanowisko FROM pracownik WHERE dzial='TECHNICZNY' AND (stanowisko='KIEROWNIK' OR stanowisko='SPRZEDAWCA');
 
 --5.3
 SELECT * FROM samochod WHERE marka!='FORD' AND marka!='FIAT';
 
 --6.2
 SELECT imie, nazwisko, data_zatr FROM pracownik WHERE imie IN ('Anna','Marzena','Alicja'); 
 
 --6.3
 SELECT imie, nazwisko, miasto FROM klient WHERE miasto NOT IN ('Warszawa', 'Wroclaw'); 
 
 --7.2
 SELECT imie, nazwisko FROM klient WHERE nazwisko LIKE 'D%' AND nazwisko LIKE '%SKI';
 
  --7.3
SELECT imie, nazwisko FROM klient WHERE imie LIKE '_o%' OR imie LIKE '_a%';

--8.2
 SELECT * FROM pracownik WHERE data_zatr BETWEEN '1997-01-01' AND '1997-12-31';
 
 --8.3
  SELECT * FROM samochod WHERE przebieg BETWEEN '10000' AND '20000' OR przebieg BETWEEN '30000' AND '40000';
  
--9.2
SELECT * FROM klient WHERE nr_karty_kredyt IS NOT NULL;

--9.3
SELECT imie, nazwisko, dodatek=COALESCE(dodatek, 0) FROM pracownik;


--dodawanie

insert into klient
(id_klient,id_adres,imie,nazwisko,pesel,telefon,email,haslo,rabat,data_dodania,usuniety)
values(25,51,'zenon','pierdzibaka','444444444','997','jedstemglupi@wp.pl','chuj','0','2014-04-10',0)

--10.2
SELECT imie, nazwisko, pensja+pensja*0.5 AS nowa_pensja FROM pracownik;

--10.3
SELECT imie, nazwisko, 0.01*(pensja+COALESCE(dodatek,0)) AS zar_1_proc FROM pracownik ORDER BY zar_1_proc ASC;

--11.2
SELECT TOP 5 imie, nazwisko FROM pracownik ORDER BY nazwisko ASC, imie ASC;

--11.3
SELECT TOP 1 * FROM wypozyczenie ORDER BY data_wyp DESC;

--12.2
SELECT imie, nazwisko, DATEDIFF ( DAY , data_zatr, GETDATE()) AS ilosc_dni FROM pracownik ORDER BY ilosc_dni DESC;

--12.3
SELECT marka, typ, DATEDIFF ( YEAR , data_prod, GETDATE()) AS ilosc_dni FROM samochod ORDER BY ilosc_dni DESC;

--13.2
SELECT LEFT(UPPER(imie),1)+RIGHT(LOWER(imie),LEN(imie)-1) AS imie, LEFT(UPPER(nazwisko),1)+RIGHT(LOWER(nazwisko),LEN(nazwisko)-1) AS nazwisko FROM klient;

--13.3
SELECT imie, nazwisko, STUFF(nr_karty_kredyt, LEN(nr_karty_kredyt)-5, 6, 'xxxxxx') AS nr_karty_kredyt FROM klient;

--14.2
UPDATE klient SET imie='Jerzy', nazwisko='Nowak' WHERE id_klient=10;

--14.3
UPDATE pracownik SET dodatek=dodatek+100 WHERE pensja<1500;

--15.2
DELETE FROM wypozyczenie WHERE id_klient=17;

--15.3
DELETE FROM samochod WHERE przebieg>60000;

--16.2
INSERT INTO samochod (id_samochod,marka,typ,data_prod,kolor,poj_silnika,przebieg)
VALUES(50,'Skoda','Octavia','2012-09-01','srebny','1896','5000');

--16.3
INSERT INTO pracownik (id_pracownik,imie,nazwisko,data_zatr,dzial,stanowisko,pensja,dodatek,id_miejsce,telefon)
VALUES(12,'Alojzy','Mikos','2010-08-11','zaopatrzenie','magazynier','3000','50', 1 ,'501-501-501');

--17.2

SELECT k.imie, k.nazwisko, w.id_samochod, w.data_wyp
FROM klient k INNER JOIN wypozyczenie w ON k.id_klient=w.id_klient
WHERE w.data_odd IS NULL
ORDER BY k.nazwisko, k.imie

--17.3

SELECT k.imie, k.nazwisko, w.data_wyp, w.kaucja
FROM klient k INNER JOIN wypozyczenie w ON k.id_klient=w.id_klient
WHERE w.kaucja IS NOT NULL

--18.2

SELECT m.ulica, m.numer, s.marka, s.typ
FROM miejsce m INNER JOIN wypozyczenie w ON m.id_miejsce=w.id_miejsca_wyp
INNER JOIN samochod s ON w.id_samochod=s.id_samochod
ORDER BY m.ulica, m.numer, s.marka, s.typ;

--18.3

SELECT s.id_samochod, s.marka, s.typ, k.imie, k.nazwisko
FROM klient k INNER JOIN wypozyczenie w ON k.id_klient=w.id_klient
INNER JOIN samochod s ON w.id_samochod=s.id_samochod
ORDER BY s.id_samochod, k.nazwisko, k.imie;

--19.2

SELECT AVG(pensja) FROM pracownik;

--19.3

SELECT MIN(data_prod) FROM samochod;

--20.2

SELECT s.id_samochod, s.marka, s.typ, COUNT(w.id_samochod) AS ilosc_wypozyczen
FROM samochod s LEFT JOIN wypozyczenie w ON s.id_samochod=w.id_samochod
GROUP BY s.id_samochod, s.marka, s.typ
ORDER BY ilosc_wypozyczen DESC

--20.3

SELECT p.imie, p.nazwisko, COUNT(w.id_pracow_wyp) AS ilosc_wypozyczen
FROM pracownik p LEFT JOIN wypozyczenie w ON p.id_pracownik=w.id_pracow_wyp
GROUP BY p.imie, p.nazwisko, id_pracownik
ORDER BY ilosc_wypozyczen DESC;

--21.2

SELECT s.id_samochod, s.marka, s.typ, COUNT(w.id_samochod) AS ilosc_wypozyczen
FROM samochod s INNER JOIN wypozyczenie w ON s.id_samochod=w.id_samochod
GROUP BY s.id_samochod, s.marka, s.typ
HAVING COUNT(w.id_samochod)>=5
ORDER BY marka ASC, typ ASC;

--21.3

SELECT p.imie, p.nazwisko, COUNT(w.id_pracow_wyp) AS ilosc_wypozyczen
FROM pracownik p LEFT JOIN wypozyczenie w ON p.id_pracownik=w.id_pracow_wyp
GROUP BY p.imie, p.nazwisko
HAVING COUNT(w.id_pracow_wyp)<=20
ORDER BY ilosc_wypozyczen, nazwisko, imie

--22.2

SELECT imie, nazwisko, pensja FROM pracownik WHERE pensja>(SELECT AVG(pensja) FROM pracownik);

--22.3

SELECT marka, typ, data_prod FROM samochod WHERE data_prod=(SELECT MIN(data_prod) FROM samochod);

--23.2

SELECT imie, nazwisko FROM klient WHERE id_klient NOT IN (SELECT DISTINCT id_klient FROM wypozyczenie) ORDER BY nazwisko, imie;

--23.3

SELECT imie, nazwisko FROM pracownik WHERE id_pracownik NOT IN (SELECT DISTINCT id_pracow_wyp FROM wypozyczenie);


--24.2

SELECT k.id_klient, k.imie, k.nazwisko FROM klient k JOIN wypozyczenie w ON k.id_klient=w.id_klient
GROUP BY k.id_klient, k.imie, k.nazwisko HAVING COUNT(w.id_klient) =
(
SELECT TOP 1 COUNT(w.id_klient) AS ilosc FROM wypozyczenie w GROUP BY w.id_klient ORDER BY ilosc
)
ORDER BY k.nazwisko ASC, k.imie ASC;

--24.3

SELECT p.id_pracownik, p.nazwisko, p.imie FROM pracownik p JOIN wypozyczenie w ON p.id_pracownik=w.id_pracow_wyp
GROUP BY p.id_pracownik, p.nazwisko, p.imie HAVING COUNT(w.id_samochod) =
(
SELECT TOP 1 COUNT(id_pracow_wyp) AS ilosc FROM wypozyczenie w GROUP BY w.id_pracow_wyp ORDER BY ilosc DESC
)
ORDER BY p.nazwisko ASC, p.imie ASC;

--25.2

UPDATE pracownik SET dodatek=dodatek+10 FROM pracownik p JOIN wypozyczenie w ON p.id_pracownik=w.id_pracow_wyp WHERE MONTH(w.data_wyp) = 5;

--25.3

UPDATE pracownik SET pensja=pensja-(pensja*0.05) FROM pracownik WHERE id_pracownik NOT IN (SELECT DISTINCT id_pracow_wyp FROM wypozyczenie WHERE YEAR(data_wyp)=1999);

--25.3 (jezeli chodzi o pracownikow ktorzy pracuja jako sprzedawcy w dziale oblugi klienta)

UPDATE pracownik SET pensja=pensja-(pensja*0.05) FROM pracownik WHERE id_pracownik NOT IN (SELECT DISTINCT id_pracow_wyp FROM wypozyczenie WHERE YEAR(data_wyp)=1999) AND stanowisko='sprzedawca' AND dzial='obsługa klienta';

--26.2

DELETE FROM samochod WHERE id_samochod NOT IN (SELECT DISTINCT id_samochod FROM wypozyczenie);

--26.3

DELETE FROM pracownik WHERE id_pracownik NOT IN (SELECT DISTINCT id_pracownik FROM wypozyczenie);

--26.3 (jezeli chodzi o pracownikow ktorzy pracuja jako sprzedawcy w dziale oblugi klienta)

DELETE FROM pracownik WHERE id_pracownik NOT IN (SELECT DISTINCT id_pracownik FROM wypozyczenie) AND stanowisko='sprzedawca' AND dzial='obsługa klienta';

--27.2

SELECT imie, nazwisko FROM klient INTERSECT SELECT imie, nazwisko FROM pracownik ORDER BY 2, 1;

--27.3

SELECT imie, nazwisko FROM klient EXCEPT SELECT imie, nazwisko FROM pracownik ORDER BY 2, 1;


--selekcja z 2 tabel
select id_klient, imie, nazwisko from klient where id_klient not in (select distinct id_klient from faktura)

select k.id_klient, k.imie, k.nazwisko, f.data_wystawienia from klient k join faktura f on k.id_klient=f.id_klient where year(f.data_wystawienia)=2011

select k.id_klient, k.imie, k.nazwisko, count(z.id_zamowienie) as ilosc_zam from klient k left join zamowienie z on k.id_klient=z.id_klient group by k.id_klient, k.imie, k.nazwisko having count(z.id_zamowienie)>=2
